[{"D:\\todo\\src\\index.js":"1","D:\\todo\\src\\reportWebVitals.js":"2","D:\\todo\\src\\App.js":"3","D:\\todo\\src\\components\\Form.js":"4","D:\\todo\\src\\components\\TodoList.js":"5","D:\\todo\\src\\components\\Todo.js":"6"},{"size":500,"mtime":1607186557322,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1595,"mtime":1607327143251,"results":"10","hashOfConfig":"8"},{"size":1226,"mtime":1607325874201,"results":"11","hashOfConfig":"8"},{"size":550,"mtime":1607324696539,"results":"12","hashOfConfig":"8"},{"size":1007,"mtime":1607275329278,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rz4dub",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"D:\\todo\\src\\index.js",[],["30","31"],"D:\\todo\\src\\reportWebVitals.js",[],"D:\\todo\\src\\App.js",["32"],"D:\\todo\\src\\components\\Form.js",["33"],"import React, { Component } from 'react';\r\nconst Form = ({setInputText, inputText , todos,setTodos,setStatus}) =>{\r\n    \r\n    const inputTextHandler = (e) =>{\r\n        console.log(e);\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) =>{\r\n      e.preventDefault();\r\n      setTodos([...todos, {text:inputText, completed: false, id:Math.random() * 1000}]);\r\n      setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) =>{\r\n      setStatus(e.target.value);\r\n    }\r\n    \r\n        return (\r\n            <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onClick = {submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n              <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div onChange = { statusHandler } className=\"select\">\r\n              <select name=\"todos\" className=\"filter-todo\">\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n              </select>\r\n            </div>\r\n          </form>\r\n        );\r\n    \r\n}\r\n \r\nexport default Form;","D:\\todo\\src\\components\\TodoList.js",["34"],"import React, { Component } from 'react';\r\nimport Todo from './Todo';\r\nconst TodoList = ({ todos, setTodos,filteredTodos }) => {\r\n\r\n        return ( \r\n            <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n              { filteredTodos.map(todo => (\r\n                <Todo \r\n                setTodos ={ setTodos } todos ={ todos } \r\n                todo = {todo}\r\n                text={todo.text} key={todo.id}/>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n         );\r\n    \r\n}\r\n \r\nexport default TodoList;","D:\\todo\\src\\components\\Todo.js",["35"],"import React, { Component } from 'react';\r\n\r\nconst Todo = ({text,todo, todos, setTodos }) => \r\n{ \r\n    const deleteHandler = () =>{\r\n        setTodos(todos.filter(el => el.id !== todo.id));\r\n    };\r\n    const completeHandler = () =>{\r\n        setTodos(todos.map((item) => {\r\n            if(item.id === todo.id){\r\n            return{\r\n                ...item, completed: !item.completed\r\n            }} \r\n            return item;   \r\n            \r\n        }\r\n        \r\n       ));\r\n    };\r\n\r\n    return(\r\n        <div className =\"todo\">\r\n                <li className ={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n                <button onClick ={ completeHandler } className = \"complete-btn\">\r\n                    <i className = \"fas fa-check\"></i>\r\n                </button>\r\n                <button onClick = { deleteHandler }className = \"trash-btn\">\r\n                    <i className = \"fas fa-trash\"></i>\r\n                </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n \r\nexport default Todo;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":20,"column":4,"nodeType":"42","endLine":20,"endColumn":18,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":26},{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":26},{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":26},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["50"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [todos, status, saveLocalTodos, filterHandler]",{"range":"53","text":"54"},[485,499],"[todos, status, saveLocalTodos, filterHandler]"]